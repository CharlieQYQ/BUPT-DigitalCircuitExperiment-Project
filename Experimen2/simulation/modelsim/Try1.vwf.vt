// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/18/2020 23:53:19"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ARKLED_Switch_Keys
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ARKLED_Switch_Keys_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg [6:0] Key;
reg [3:0] Switch;
// wires                                               
wire Beep;
wire [7:0] COL_GREEN;
wire [7:0] COL_RED;
wire [7:0] ROW;
wire [6:0] SEG;
wire [7:0] SEG_Neg;

// assign statements (if any)                          
ARKLED_Switch_Keys i1 (
// port map - connection between master ports and signals/registers   
	.Beep(Beep),
	.CLK(CLK),
	.COL_GREEN(COL_GREEN),
	.COL_RED(COL_RED),
	.Key(Key),
	.ROW(ROW),
	.SEG(SEG),
	.SEG_Neg(SEG_Neg),
	.Switch(Switch)
);
initial 
begin 
#100000000 $stop;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #500000 1'b1;
	#500000;
end 
// Key[ 6 ]
initial
begin
	Key[6] = 1'b1;
end 
// Key[ 5 ]
initial
begin
	Key[5] = 1'b0;
end 
// Key[ 4 ]
initial
begin
	Key[4] = 1'b0;
end 
// Key[ 3 ]
initial
begin
	Key[3] = 1'b0;
end 
// Key[ 2 ]
initial
begin
	Key[2] = 1'b0;
end 
// Key[ 1 ]
initial
begin
	Key[1] = 1'b0;
end 
// Key[ 0 ]
initial
begin
	Key[0] = 1'b0;
end 
// Switch[ 3 ]
initial
begin
	Switch[3] = 1'b0;
end 
// Switch[ 2 ]
initial
begin
	Switch[2] = 1'b0;
end 
// Switch[ 1 ]
initial
begin
	Switch[1] = 1'b0;
end 
// Switch[ 0 ]
initial
begin
	Switch[0] = 1'b1;
end 
endmodule

